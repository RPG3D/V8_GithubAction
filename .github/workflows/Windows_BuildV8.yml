# This is a basic workflow to help you get started with Actions

name: Windows_BuildV8

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: master
  pull_request:
    branches: master
  watch:
    types: started

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
      working-directory: ${{github.workspace}}

    if: github.event.repository.owner.id == github.event.sender.id


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # test
      - name: test env
        shell: cmd
        run: |
          echo ${{env.working-directory}}
            
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            repository: V8/V8
            path: V8 

      # Runs a single command using the runners shell
      - name: download depot_tools
        shell: cmd
        working-directory: ${{env.working-directory}}
        run: |
          curl https://storage.googleapis.com/chrome-infra/depot_tools.zip  >./depot_tools.zip
          dir
          
      # unzip depot_tools
      - name: unzip depot_tools
        shell: cmd
        working-directory: ${{env.working-directory}}
        run: |
          cd /D ${{env.working-directory}}
          tar -xf ./depot_tools.zip
          
      # add depot_tools & VS2019 to PATH
      - name: add depot_tools & VS2019 to PATH
        shell: cmd
        working-directory: ${{env.working-directory}}
        run: |
          setx /M path "%path%;${{env.working-directory}}\depot_tools"
          setx /M vs2019_install "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
          echo %path%
          echo %vs2019_install%
      
     # test gclient
      - name: test gclient
        shell: cmd
        working-directory: ${{env.working-directory}}
        run: |
          gclient
